# -*- coding: utf-8 -*-
"""Assignment 3.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1LREXpt_zi6k9sVofRVdsLnyvvB2STgWw
"""

from google.colab import drive
drive.mount("/content/drive/")

path = "/content/drive/My Drive/CoLab/"
f = open(path+'virginia_woolf_mrs_dalloway.txt', 'r')

from google.colab import drive
import random

drive.mount('/content/drive')

def read_text(file_path):
    with open(file_path, 'r', encoding='utf-8') as file:
        return file.read()

def extract_sentences(text, keyword):
    sentences = [sentence.strip() + '.' for sentence in text.split('.') if keyword.lower() in sentence.lower()]
    return sentences

file_path = '/content/drive/My Drive/CoLab/virginia_woolf_mrs_dalloway.txt'

# Read and process the text
text = read_text(file_path)
key_phrases = extract_sentences(text, 'time')

# Output some of the extracted phrases
print("Extracted Phrases:")
print(random.sample(key_phrases, 5))

def create_poem(phrases, lines=10):
    random.shuffle(phrases)
    poem = '\n'.join(phrases[:lines])
    return poem

# Generate a poem from extracted phrases
poem = create_poem(key_phrases)
print("\nGenerated Poem:")
print(poem)

from google.colab import drive
import random
from textblob import TextBlob

drive.mount('/content/drive')

def read_text(file_path):
    with open(file_path, 'r', encoding='utf-8') as file:
        return file.read()

def extract_sentences(text, keyword):
    sentences = [sentence.strip() + '.' for sentence in text.split('.') if keyword.lower() in sentence.lower()]
    return sentences

def filter_sentences_by_sentiment(sentences, tone='positive'):
    filtered_sentences = []
    for sentence in sentences:
        analysis = TextBlob(sentence)
        if (tone == 'positive' and analysis.sentiment.polarity > 0) or (tone == 'negative' and analysis.sentiment.polarity < 0):
            filtered_sentences.append(sentence)
    return filtered_sentences

file_path = '/content/drive/My Drive/CoLab/virginia_woolf_mrs_dalloway.txt'


text = read_text(file_path)
key_phrases = extract_sentences(text, 'time')

# Output some of the extracted phrases
print("Extracted Phrases:")
print(random.sample(key_phrases, min(5, len(key_phrases))))

def create_poem(phrases, lines=10):
    """Create a poem from shuffled phrases."""
    random.shuffle(phrases)
    poem = '\n'.join(phrases[:lines])
    return poem

# Filter sentences for positive sentiment
positive_phrases = filter_sentences_by_sentiment(key_phrases, 'positive')

# Generate a poem from extracted and positively filtered phrases
positive_poem = create_poem(positive_phrases)
print("\nPositive Sentiment Poem:")
print(positive_poem)